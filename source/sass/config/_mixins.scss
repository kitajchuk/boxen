/******************************************************************************
 * Functions
*******************************************************************************/
@function sqs-calc( $expression ) {
    @return #{"~\"calc( #{$expression} )\""};
}


/******************************************************************************
 * Fonts: Util
*******************************************************************************/
@mixin font-normal() {
    font-stretch: normal;
    font-style: normal;
}


/******************************************************************************
 * Fonts: Styles
*******************************************************************************/
@mixin font-family-sans() {
    font-family: $font-sans-regular;
    @include font-normal();
}
@mixin font-family-sans-bold() {
    font-family: $font-sans-bold;
    @include font-normal();
}
@mixin font-family-monospace() {
    font-family: $font-monospace;
    @include font-normal();
}
@mixin font-family-monospace-italic() {
    font-family: $font-monospace-italic;
    @include font-normal();
}
@mixin font-family-monospace-bold() {
    font-family: $font-monospace-bold;
    @include font-normal();
}
@mixin font-family-monospace-bold-italic() {
    font-family: $font-monospace-bold-italic;
    @include font-normal();
}


/******************************************************************************
 * Typography: Hierarchy
*******************************************************************************/
@mixin mono() {
    font-size: $p-size-mobile;
    line-height: $p-line;
    @include font-family-monospace-bold();
    max-width: $text-width;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $p-size;
    }
}
@mixin p() {
    font-size: $p-size-mobile;
    line-height: $p-line;
    @include font-family-sans-bold();
    max-width: $text-width;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $p-size;
    }
}
@mixin m() {
    font-size: $m-size-mobile;
    line-height: $m-line;
    @include font-family-sans-bold();
    max-width: $text-width;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $m-size;
    }
}
@mixin h1() {
    font-size: $h1-size-mobile;
    line-height: $h1-line;
    @include font-family-sans-bold();
    max-width: $text-width-2;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $h1-size;
    }
}
@mixin h2() {
    font-size: $h2-size-mobile;
    line-height: $h2-line;
    @include font-family-sans-bold();
    max-width: $text-width;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $h2-size;
    }
}
@mixin h3() {
    font-size: $h3-size-mobile;
    line-height: $h3-line;
    @include font-family-sans-bold();
    max-width: $text-width;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $h3-size;
    }
}
@mixin sqs-alert-button() {
    font-family: $font-sans-bold !important;
    font-size: $m-size-mobile !important;
    line-height: $m-line !important;

    @include respond-min( $mobile-breakpoint ) {
        font-size: $m-size !important;
    }

    @include respond-min( $desktop-breakpoint ) {
        font-size: $m-size !important;
    }
}


/******************************************************************************
 * Typography: Children
*******************************************************************************/
@mixin a( $color ) {
    color: $color;
    border-bottom: 1px solid $color;
    transition: border-bottom-color $base-duration $ease,
                color $base-duration $ease;

    &.is-active,
    .is-hoverable &:hover,
    .is-hoverable &.is-active:hover {
        border-bottom-color: transparent;
        color: mix( black, $color, 25% );
    }
}
@mixin placeholder( $color ) {
    &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
        color: $color;
    }
    &::-moz-placeholder { /* Firefox 19+ */
        color: $color;
    }
    &:-ms-input-placeholder { /* IE 10+ */
        color: $color;
    }
    &:-moz-placeholder { /* Firefox 18- */
        color: $color;
    }
    &::placeholder { /* Future standard */
        color: $color;
    }
}



/******************************************************************************
 * Typography: UI
*******************************************************************************/
@mixin button() {
    @include m();
    background-color: $teal;
    padding: 0 40px;
    line-height: 1;
    color: $black;
    cursor: pointer;
    -webkit-appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    cursor: pointer;
    text-align: center;
    height: $input-height;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    position: relative;
    transition: background-color $base-duration $ease;

    .is-hoverable &:hover {
        background-color: mix( black, $teal, 25% );
    }

    @include respond( $mobile-breakpoint ) {
        height: $input-height-m;
    }
}
@mixin input() {
    @include m();
    @include placeholder( $grey-dark );
    line-height: 1;
    padding: 0 20px;
    -webkit-appearance: none;
    outline: 0;
    border: 3px solid $purple;
    background-color: transparent;
    color: $white;
    width: 100%;
    max-width: $form-width;
    height: $input-height;
    border-radius: 0;
    display: inline-block;
    vertical-align: middle;
    transition: color $base-duration $ease,
                border-color $base-duration $ease;

    &.is-error {
        border-color: $red;
    }

    &.is-success {
        border-color: $green;
    }

    @include respond( $mobile-breakpoint ) {
        height: $input-height-m;
    }
}
@mixin textarea() {
    @include input();
    height: $textarea-height;
    padding-top: 20px;

    @include respond( $mobile-breakpoint ) {
        height: $textarea-height;
    }
}
@mixin select() {
    @include m();
    color: $grey-dark;
    line-height: 1;
    padding: 0 20px;
    -webkit-appearance: none;
    outline: 0;
    border: 3px solid $purple;
    background-color: transparent;
    width: 100%;
    max-width: $form-width;
    height: $input-height;
    border-radius: 0;
    display: inline-block;
    vertical-align: middle;
    position: relative;

    @include respond( $mobile-breakpoint ) {
        height: $input-height-m;
    }

    &.is-error {
        border-color: $red;
    }

    &.is-success {
        border-color: $green;
    }

    &.is-selected {
        color: $white;
    }
}
@mixin nbsp() {
    &:before {
        position: relative;
        display: inline-block;
        content: "\00a0\00a0\00a0\00a0\00a0\00a0\00a0\00a0";

        @include respond( $mobile-breakpoint ) {
            content: "\00a0\00a0\00a0\00a0";
        }
    }
}
@mixin spacer() {
    padding-top: $expander-m;
    padding-bottom: $expander-m;

    @include respond( $laptop-breakpoint ) {
        padding-top: $expander-v2;
        padding-bottom: $expander-v2;
    }

    @include respond( $mobile-breakpoint ) {
        padding-top: $expander-0;
        padding-bottom: $expander-0;
    }
}
@mixin ruler() {
    margin-top: $expander-1;
    margin-bottom: $expander-1;

    @include respond( $laptop-breakpoint ) {
        margin-top: $expander-v;
        margin-bottom: $expander-v;
    }

    @include respond( $mobile-breakpoint ) {
        margin-top: $expander-0 * 2;
        margin-bottom: $expander-0 * 2;
    }
}


/******************************************************************************
 * Layout: Containers
*******************************************************************************/
@mixin wrap() {
    padding-left: $padding-v;
    padding-right: $padding-v;

    @include respond( $laptop-breakpoint ) {
        padding-left: $padding-1;
        padding-right: $padding-1;
    }

    @include respond( $tablet-breakpoint ) {
        padding-left: $expander-0;
        padding-right: $expander-0;
    }

    @include respond( $mobile-breakpoint ) {
        padding-left: $padding-m;
        padding-right: $padding-m;
    }
}
@mixin wrapr() {
    padding-right: $padding-v;

    @include respond( $laptop-breakpoint ) {
        padding-right: $padding-1;
    }

    @include respond( $tablet-breakpoint ) {
        padding-right: $expander-0;
    }

    @include respond( $mobile-breakpoint ) {
        padding-right: $padding-m;
    }
}
@mixin wrapl() {
    padding-left: $padding-v;

    @include respond( $laptop-breakpoint ) {
        padding-left: $padding-1;
    }

    @include respond( $tablet-breakpoint ) {
        padding-left: $expander-0;
    }

    @include respond( $mobile-breakpoint ) {
        padding-left: $padding-m;
    }
}
@mixin wrap-imp() {
    padding-left: $padding-v !important;
    padding-right: $padding-v !important;

    @include respond( $laptop-breakpoint ) {
        padding-left: $padding-1 !important;
        padding-right: $padding-1 !important;
    }

    @include respond( $tablet-breakpoint ) {
        padding-left: $expander-0 !important;
        padding-right: $expander-0 !important;
    }

    @include respond( $mobile-breakpoint ) {
        padding-left: $padding-m !important;
        padding-right: $padding-m !important;
    }
}
@mixin exp() {
    padding-top: $expander-1;
    padding-bottom: $expander-1;

    @include respond( $laptop-breakpoint ) {
        padding-top: $expander-v;
        padding-bottom: $expander-v;
    }

    @include respond( $mobile-breakpoint ) {
        padding-top: $expander-m;
        padding-bottom: $expander-m;
    }
}
@mixin expt() {
    padding-top: $expander-1;

    @include respond( $laptop-breakpoint ) {
        padding-top: $expander-v;
    }

    @include respond( $mobile-breakpoint ) {
        padding-top: $expander-m;
    }
}
@mixin expb() {
    padding-bottom: $expander-1;

    @include respond( $laptop-breakpoint ) {
        padding-bottom: $expander-v;
    }

    @include respond( $mobile-breakpoint ) {
        padding-bottom: $expander-m;
    }
}


/******************************************************************************
 * Layout: Maximums
*******************************************************************************/
// @mixin text() {
//     width: 100%;
//     max-width: $text-width;
//     position: relative;
//
//     @include respond( $text-breakpoint ) {
//         left: auto;
//         margin-left: auto;
//         display: block;
//     }
//
//     @include respond( $laptop-breakpoint ) {
//         max-width: $text-width - 200px;
//     }
// }
// @mixin media() {
//     display: inline-block;
//     max-width: $media-width-0;
//     width: 100%;
// }
// @mixin media-tall() {
//     display: inline-block;
//     max-width: $text-width;
//     width: 100%;
// }
@mixin diptych() {
    width: $tall-width-0;
    max-width: 100%;
}


/******************************************************************************
 * Layout: UI
*******************************************************************************/
@mixin icon-play-size() {
    max-width: 23px;
    width: 0.8984375vw;
    min-width: 16px;
    max-height: 27px;
    height: 1.0546875vw;
    min-height: 19px;
}



/******************************************************************************
 * Media queries
 *
 * @see ../config/_variables.scss for Breakpoints
*******************************************************************************/
@mixin respond( $width ) {
    @media only screen and ( max-width: $width ) {
        @content;
    }
}
@mixin respond-min( $width ) {
    @media only screen and ( min-width: $width ) {
        @content;
    }
}
